// prisma/schema.prisma - VERSÃO COM TABELA DE LOGS

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(USER)
  createdAt DateTime   @default(now())
  
  romaneios Romaneio[]
  logs      LogEntry[] // Relação: Um usuário pode ter várias entradas de log
}

model Romaneio {
  id                String    @id @default(cuid())
  nomeCompleto      String
  cpf               String?
  emailSolicitante  String?
  fileName          String?
  fileUrl           String?
  isSigned          Boolean   @default(false)
  signedAt          DateTime?
  signatureToken    String    @unique @default(cuid())
  signatureImageUrl String?

  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  author            User      @relation(fields: [authorId], references: [id])
  authorId          String

  logs              LogEntry[] // Relação: Um romaneio pode ter várias entradas de log
}

enum Role {
  ADMIN
  USER
}

// NOVO MODELO PARA OS LOGS
model LogEntry {
  id         String    @id @default(cuid())
  message    String    // Mensagem do log (ex: "Usuário Igor criou o romaneio para Cliente X")
  createdAt  DateTime  @default(now())

  // Relações opcionais para rastreamento
  userId     String?
  user       User?     @relation(fields: [userId], references: [id])
  
  romaneioId String?
  romaneio   Romaneio? @relation(fields: [romaneioId], references: [id], onDelete: Cascade)
}