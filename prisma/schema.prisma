// prisma/schema.prisma - VERSÃO COM AÇÃO DE LOG

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(USER)
  createdAt DateTime   @default(now())
  
  romaneios Romaneio[]
  logs      LogEntry[]
}

model Romaneio {
  id                String    @id @default(cuid())
  nomeCompleto      String
  cpf               String?
  emailSolicitante  String?
  fileName          String?
  fileUrl           String?
  isSigned          Boolean   @default(false)
  signedAt          DateTime?
  signatureToken    String    @unique @default(cuid())
  signatureImageUrl String?

  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  author            User      @relation(fields: [authorId], references: [id])
  authorId          String

  logs              LogEntry[]
}

enum Role {
  ADMIN
  USER
}

// NOVO ENUM PARA PADRONIZAR AS AÇÕES
enum LogAction {
  USER_LOGIN
  USER_CREATED
  USER_UPDATED
  USER_ROLE_CHANGED
  ROMANEIO_CREATED
  ROMANEIO_SIGNED
}

model LogEntry {
  id         String    @id @default(cuid())
  message    String
  action     LogAction // NOVO CAMPO ADICIONADO
  createdAt  DateTime  @default(now())

  userId     String?
  user       User?     @relation(fields: [userId], references: [id])
  
  romaneioId String?
  romaneio   Romaneio? @relation(fields: [romaneioId], references: [id], onDelete: Cascade)
}